/* A basic color theme and associated dark theme inspired by
   https://material.io/design/color/dark-theme.html.

Can be imported via:

    @import '~elements-sk/themes/themes';

When choosing colors for a theme be sure to use the Material
Design Color Tool:

   https://material.io/resources/color/

And follow the guidance on the use of colors for both light
and dark themes:

  https://material.io/design/color/the-color-system.html#color-theme-creation
  https://material.io/design/color/dark-theme.html#ui-application
*/

@import './color-palette';

/* Define Color Palette */
html {
  /* See https://material.io/design/color/dark-theme.html for how to use each of
     the CSS variables below.

     This theme was generated using the Material Design Color Tool with the
     following selections:

     https://material.io/resources/color/#!/?view.left=1&view.right=0&secondary.color=D84315&primary.color=1565C0

     The "Accessibility" tab shows the text colors to use for legibility.

     The colors were chosen to meet MD guidelines and come as close as possible
     to the color scheme elements-sk had before theme support was added.
     */
  --primary: var(--blue-800);
  --on-primary: var(--white);
  --primary-variant: #5e92f3;
  --on-primary-variant: var(--black);
  --secondary: var(--deep-orange-800);
  --on-secondary: var(--black);
  --background: var(--grey-50);
  --on-background: var(--black);
  --surface: var(--white);
  --on-surface: var(--black);
  --surface-1dp: var(--grey-200);
  --surface-2dp: var(--grey-400);
  --disabled: var(--grey-100);
  --on-disabled: var(--grey-700);
  --error: var(--red-900);
  --on-error: var(--white);
  --transparent-overlay: rgba(0, 0, 0, 0.5);

  --text-intensity-high: 87%;
  --text-intensity-medium: 60%;
  --text-intensity-disabled: 38%;
}

/* Class to override colors with dark theme.

These colors match the names of the colors given in
https://material.io/design/color/dark-theme.html#ui-application for the default
dark color scheme.
*/
.darkmode {
  --primary: var(--purple-200);
  --on-primary: var(--black);
  --primary-variant: var(--indigo-700);
  --on-primary-variant: var(--white);
  --secondary: var(--teal-200);
  --on-secondary: var(--black);
  --background: var(--black);
  --on-background: var(--white);
  --surface: var(--grey-900);
  --surface-1dp: var(--grey-800);
  --surface-2dp: var(--grey-700);
  --disabled: var(--grey-600);
  --on-disabled: var(--grey-300);
  --on-surface: var(--white);
  --error: var(--pink-400);
  --on-error: var(--black);
  --transparent-overlay: rgba(255, 255, 255, 0.5);
}

/* Helper classes to set elements to colors sets. */
.primary-container-themes-sk {
  background-color: var(--primary);
  color: var(--on-primary);
  fill: var(--on-primary);
}

/* Ensure the body respects darkmode */
.body-sk {
  background-color: var(--background);
  color: var(--on-background);
  fill: var(--on-background);
}

.primary-themes-sk {
  color: var(--primary);
  fill: var(--primary);
}

.primary-variant-container-themes-sk {
  background-color: var(--primary-variant);
  color: var(--on-primary-variant);
  fill: var(--on-primary-variant);
}

.primary-variant-themes-sk {
  color: var(--primary-variant);
  fill: var(--primary-variant);
}

.secondary-container-themes-sk {
  background-color: var(--secondary);
  color: var(--on-secondary);
  fill: var(--on-secondary);
}

.secondary-themes-sk {
  color: var(--secondary);
  fill: var(--secondary);
}

.surface-themes-sk {
  background-color: var(--surface);
  color: var(--on-surface);
  fill: var(--on-surface);
}

.error-container-themes-sk {
  background-color: var(--error);
  color: var(--on-error);
  fill: var(--on-error);
}

.error-themes-sk {
  color: var(--error);
  fill: var(--error);
}

.overlay-themes-sk {
  background-color: var(--transparent-overlay);
}
